<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DJI SDK | Yu Zhou</title>
    <link>/tag/dji-sdk/</link>
      <atom:link href="/tag/dji-sdk/index.xml" rel="self" type="application/rss+xml" />
    <description>DJI SDK</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>© 2020 Yu Zhou</copyright><lastBuildDate>Wed, 15 Mar 2017 00:00:00 +0800</lastBuildDate>
    <image>
      <url>/images/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_2.png</url>
      <title>DJI SDK</title>
      <link>/tag/dji-sdk/</link>
    </image>
    
    <item>
      <title>GPS-Denied Vision Control of UAV</title>
      <link>/project/gps-denied-vision-control-of-uav/</link>
      <pubDate>Wed, 15 Mar 2017 00:00:00 +0800</pubDate>
      <guid>/project/gps-denied-vision-control-of-uav/</guid>
      <description>&lt;p&gt;From March 2017 to December 2018, I worked on “Project Micrathene” with a Ph.D. student who focused on controls.
The objective of this project was to develop an autonomous launch, tracking and landing system for an Unmanned Aerial Vehicle (UAV).
The object to track and land on was a moving ground platform, and everything was to be done without GPS.&lt;/p&gt;
&lt;p&gt;In this project, vision is used to estimate the pose,
the translation and rotation relationship, between the UGV and the UAV.
The pose was used for flight control during different states of the UAV.&lt;/p&gt;
&lt;p&gt;The hardware platform contains:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DJI Matrice 100 fly platform&lt;/li&gt;
&lt;li&gt;Point Grey Chameleon 3 camera&lt;/li&gt;
&lt;li&gt;NUC onboard computer.&lt;/li&gt;
&lt;li&gt;Omnidirectional mobility platform&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Communication between the onboard and offboard computer is established over Wi-Fi.&lt;/p&gt;
&lt;p&gt;The software involves:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ubuntu&lt;/li&gt;
&lt;li&gt;ROS Kinetic&lt;/li&gt;
&lt;li&gt;OpenCV&lt;/li&gt;
&lt;li&gt;DJI SDK&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;Slide2.png&#34; alt=&#34;This is an image&#34;&gt;&lt;/p&gt;
&lt;center&gt;Fig. 1. Hardware and Software Platform&lt;/center&gt;
&lt;p&gt;A marker was designed to obtain the relative pose between the UAV and the UGV platform.
There are four coordinate systems: image, camera, marker and UAV.
The transformation matrix between different coordinate systems is shown on Figure 2.
n order to control the UAV, the pose between the camera and the marker, which is [R2 t2], has to be calculated with the PnP method.
The pose between the UAV and the moving platform can then be obtained through another coordinate transform.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Slide3.png&#34; alt=&#34;This is an image&#34;&gt;&lt;/p&gt;
&lt;center&gt;Fig. 2. Transformation matrix&lt;/center&gt;
&lt;p&gt;The software design of this project is shown on Figure 3:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Obtain undistorted images through image processing;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Send these images to the marker detection process to get the camera pose w.r.t. the marker;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In the main process, a state machine was run to process all the data and commands,
including the pose between the moving platform and the UAV, sensor data from DJI SDK and the command from the off-board computer.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;Slide4.png&#34; alt=&#34;This is an image&#34;&gt;&lt;/p&gt;
&lt;center&gt;Fig. 3. Software design&lt;/center&gt;
&lt;p&gt;The final demonstration is shown in the following video:

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/cIJGd6TkZRM&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;center&gt;Demo Video&lt;/center&gt;</description>
    </item>
    
  </channel>
</rss>
